version: "3.3"

services:
  vote:
    build: ./vote
    command: python app.py
    volumes:
     - ./vote:/app
    ports:
      - "5000:80"
    networks:
      - front-tier
      - back-tier

  result:
    build: ./result
    command: nodemon server.js
    volumes:
      - ./result:/app
    ports:
      - "5001:80"
      - "5858:5858"
    networks:
      - front-tier
      - back-tier

  worker:
    build:
      context: ./worker
    depends_on:
      - "redis"
    networks:
      - back-tier

  redis:    
    build:
      context: ./redis
      labels:
        co.elastic.metrics/hosts: "redis"
        co.elastic.metrics/port: "6379"
    container_name: redis
    depends_on:
      - "es-metricbeat"
    ports: ["6379"]
    networks:
      - back-tier

  db:
    build:
      context: ./postgres
      labels:
        co.elastic.metrics/hosts: "db"
        co.elastic.metrics/port: "5432"
    container_name: db
    volumes:
      - "db-data:/var/lib/postgresql/data"
    networks:
      - back-tier
    ports:
      - "5432:5432"

  es-metricbeat:
    build:
      context: ./elastic/metricbeat
      args:
        ES_VERSION: ${ES_VERSION}
    environment: 
      - ES_CLOUD_ID=${ES_CLOUD_ID}
      - ES_USERNAME=${ES_USERNAME}
      - ES_PASSWORD=${ES_PASSWORD}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - back-tier

  es-filebeat:
    build:
      context: ./elastic/filebeat
      args:
        ES_VERSION: ${ES_VERSION}
    environment: 
      - ES_CLOUD_ID=${ES_CLOUD_ID}
      - ES_USERNAME=${ES_USERNAME}
      - ES_PASSWORD=${ES_PASSWORD}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/var/lib/docker:/var/lib/docker:ro"
    networks:
      - back-tier
  
  es-filebeat-logstash:
    build:
      context: ./elastic/filebeat
      dockerfile: Dockerfile.Logstash
      args:
        ES_VERSION: ${ES_VERSION}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/var/lib/docker:/var/lib/docker:ro"
    networks:
      - back-tier
  
  es-logstash:
    build:
      context: ./elastic/logstash
      args:
        ES_VERSION: ${ES_VERSION}
    environment: 
      - ES_HOST=${ES_HOST}
      - ES_USERNAME=${ES_USERNAME}
      - ES_PASSWORD=${ES_PASSWORD}
    networks:
      - back-tier
    
      
volumes:
  db-data:
  container-logs:

networks:
  front-tier:
  back-tier: